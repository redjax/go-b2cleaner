---
name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Build
        env:
          ## Disable CGO for static binaries
          CGO_ENABLED: 0
        run: |
          mkdir -p dist

          declare -a BuildPlatforms=("darwin/amd64" "darwin/arm64" "linux/amd64" "linux/arm64" "windows/amd64")

          ## Build for multiple platforms
          for platform in "${BuildPlatforms[@]}"; do
            ## Split platform into GOOS/GOARCH
            GOOS=${platform%/*} 
            GOARCH=${platform#*/}
            
            ## Build the binary explicitly for cmd/b2cleaner
            go build -o dist/b2cleaner ./cmd/b2cleaner  # <--- THIS IS THE BUILD COMMAND
            
            ## Rename and zip for Windows
            if [ "$GOOS" = "windows" ]; then
              mv dist/b2cleaner dist/b2cleaner.exe
              zip -j dist/b2cleaner-${GITHUB_REF_NAME}-${OS_NAME}-${GOARCH}.zip dist/b2cleaner.exe
              rm dist/b2cleaner.exe
            else
              zip -j dist/b2cleaner-${GITHUB_REF_NAME}-${OS_NAME}-${GOARCH}.zip dist/b2cleaner
              rm dist/b2cleaner
            fi
          done

  release:
    name: Create release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Create Github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/b2cleaner-${{ github.ref_name }}-*.zip
          asset_name: b2cleaner-${{ github.ref_name }}-$(echo {{ asset_path }} | sed 's/.*-\([^-]*\)\.zip/\1/').zip
          asset_content_type: application/zip
